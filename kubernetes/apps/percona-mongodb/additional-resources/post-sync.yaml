---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: mongodb-post-creation-
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
spec:
  template:
    spec:
      serviceAccountName: default
      containers:
        - name: mongo-client-init-database
          image: percona/percona-server-mongodb:6.0.11
          command:
            - "mongosh"
            - "mongodb+srv://$(MONGODB_DATABASE_ADMIN_USER):$(MONGODB_DATABASE_ADMIN_PASSWORD)@$(MONGODB_SERVICE_NAME)-$(MONGODB_REPLICASET_NAME).$(K8S_NAMESPACE).svc.cluster.local/admin?replicaSet=$(MONGODB_REPLICASET_NAME)&ssl=false"
            - "--eval"
            - "load('/tmp/init-database.js')"
          env:
            - name: MONGODB_DATABASE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MONGODB_DATABASE_ADMIN_PASSWORD
                  name: mongodb-in-cluster-ps-secrets
            - name: MONGODB_DATABASE_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: MONGODB_DATABASE_ADMIN_USER
                  name: mongodb-in-cluster-ps-secrets
            - name: MONGODB_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: MONGODB_DATABASE_NAME
            - name: COLLECTION_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: COLLECTION_NAME
            - name: MONGODB_REPLICASET_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: MONGODB_REPLICASET_NAME
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: init-scripts
              mountPath: /tmp
        - name: mongo-client-init-users
          image: percona/percona-server-mongodb:6.0.11
          command:
            - "mongosh"
            - "mongodb+srv://$(MONGODB_USER_ADMIN_USER):$(MONGODB_USER_ADMIN_PASSWORD)@$(MONGODB_SERVICE_NAME)-$(MONGODB_REPLICASET_NAME).$(K8S_NAMESPACE).svc.cluster.local/admin?replicaSet=$(MONGODB_REPLICASET_NAME)&ssl=false"
            - "--eval"
            - "load('/tmp/init-users.js')"
          env:
            - name: MONGODB_USER_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MONGODB_USER_ADMIN_PASSWORD
                  name: mongodb-in-cluster-ps-secrets
            - name: MONGODB_USER_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: MONGODB_USER_ADMIN_USER
                  name: mongodb-in-cluster-ps-secrets
            - name: MONGODB_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: MONGODB_DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: DATABASE_USER
            - name: MONGODB_REPLICASET_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-sync-cm
                  key: MONGODB_REPLICASET_NAME
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: init-scripts
              mountPath: /tmp
      volumes:
        - name: init-scripts
          configMap:
            name: post-sync-cm
      restartPolicy: Never
  backoffLimit: 3
