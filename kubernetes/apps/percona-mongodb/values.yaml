finalizers:
  - delete-psmdb-pods-in-order
nameOverride: ""
fullnameOverride: ""
crVersion: 1.14.0
pause: false
unmanaged: false
allowUnsafeConfigurations: false
multiCluster:
  enabled: false
updateStrategy: SmartUpdate
upgradeOptions:
  apply: disabled
image:
  repository: percona/percona-server-mongodb
  tag: 6.0.11
imagePullPolicy: Always
pmm:
  enabled: false
secrets: "psmdb-secrets"
replsets:
  - name: rs0
    size: 3
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
    expose:
      enabled: false
      exposeType: ClusterIP
    nonvoting:
      enabled: true
      size: 3
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
          cpu: "300m"
          memory: "0.5G"
        requests:
          cpu: "300m"
          memory: "0.5G"
      volumeSpec:
        pvc:
          storageClassName: rook-ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 3Gi
    arbiter:
      enabled: true
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    resources:
      limits:
        cpu: "300m"
        memory: "0.5G"
      requests:
        cpu: "300m"
        memory: "0.5G"
    volumeSpec:
      pvc:
        storageClassName: rook-ceph-block
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
sharding:
  enabled: true
  configrs:
    size: 3
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
    expose:
      enabled: false
      exposeType: ClusterIP
    resources:
      limits:
        cpu: "300m"
        memory: "0.5G"
      requests:
        cpu: "300m"
        memory: "0.5G"
    volumeSpec:
      pvc:
        storageClassName: rook-ceph-block
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
  mongos:
    size: 2
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
    resources:
      limits:
        cpu: "300m"
        memory: "0.5G"
      requests:
        cpu: "300m"
        memory: "0.5G"
    expose:
      exposeType: ClusterIP
backup:
  enabled: false
  image:
    repository: harbor.cp.az.km.spaceforce.mil/docker.io/percona/percona-server-backup-mongodb
    tag: 2.0.4
  serviceAccountName: percona-server-mongodb-operator
  resources:
    limits:
      cpu: "300m"
      memory: "0.5G"
    requests:
      cpu: "300m"
      memory: "0.5G"
  storages:
    azure-blob:
      type: azure
      azure:
        container: CONTAINER-NAME
        prefix: PREFIX-NAME
        credentialsSecret: SECRET-NAME
  pitr:
    enabled: false
    oplogSpanMin: 10
    compressionType: gzip
    compressionLevel: 6
  tasks:
    - name: daily-s3-us-west
      enabled: true
      schedule: "0 0 * * *"
      keep: 3
      storageName: azure-blob
      compressionType: gzip
# If you set users here the secret will be constructed by helm with these values
# users:
#   MONGODB_BACKUP_USER: backup
#   MONGODB_BACKUP_PASSWORD: backup123456
#   MONGODB_DATABASE_ADMIN_USER: databaseAdmin
#   MONGODB_DATABASE_ADMIN_PASSWORD: databaseAdmin123456
#   MONGODB_CLUSTER_ADMIN_USER: clusterAdmin
#   MONGODB_CLUSTER_ADMIN_PASSWORD: clusterAdmin123456
#   MONGODB_CLUSTER_MONITOR_USER: clusterMonitor
#   MONGODB_CLUSTER_MONITOR_PASSWORD: clusterMonitor123456
#   MONGODB_USER_ADMIN_USER: userAdmin
#   MONGODB_USER_ADMIN_PASSWORD: userAdmin123456
#   PMM_SERVER_API_KEY: apikey
#   # PMM_SERVER_USER: admin
#   # PMM_SERVER_PASSWORD: admin
